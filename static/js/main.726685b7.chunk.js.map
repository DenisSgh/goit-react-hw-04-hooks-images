{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/ApiService/ApiService.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","ApiService","searchQuery","currentPage","axios","get","then","resp","data","hits","propTypes","PropTypes","string","isRequired","number","Searchbar","onSubmit","useState","query","setQuery","className","s","e","preventDefault","SearchForm","type","SearchFormButton","SearchFormInput","value","onChange","currentTarget","autoComplete","autoFocus","placeholder","ImageGalleryItem","url","alt","largeImage","modalOpen","onClick","src","ImageGalleryItemImage","ImageGallery","images","map","id","webformatURL","tags","largeImageURL","Button","Loader","color","height","width","Component","Modal","modalClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","Overlay","target","App","setImages","setCurrentPage","setSearchQuery","setLargeImage","isLoading","setIsLoading","showModal","setShowModal","fetchPictures","options","setTimeout","prev","smoothScroll","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,yBAAyB,0CAA0C,gBAAkB,qC,iJCI5OC,EAAa,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YACjC,OAAOC,IACJC,IADI,qCAE2BH,EAF3B,iBAE+CC,EAF/C,gBAHG,qCAGH,2DAKJG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,SAG5BR,EAAWS,UAAY,CACrBR,YAAaS,IAAUC,OAAOC,WAC9BV,YAAaQ,IAAUG,OAAOD,YAGjBZ,Q,uBCdA,SAASc,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,wBAAQC,UAAWC,IAAEN,UAArB,SACE,uBAAMC,SATW,SAAAM,GACnBA,EAAEC,iBAEFP,EAASE,GACTC,EAAS,KAKuBC,UAAWC,IAAEG,WAA3C,UACE,wBAAQC,KAAK,SAASL,UAAWC,IAAEK,mBAEnC,uBACEN,UAAWC,IAAEM,gBACbF,KAAK,OACLG,MAAOV,EACPW,SApBa,SAAAP,GACnBH,EAASG,EAAEQ,cAAcF,QAoBnBG,aAAa,MACbC,WAAS,EACTC,YAAY,kC,oBCTPC,EAnBU,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAKhD,OACE,oBAAIlB,UAAWC,IAAEa,iBAAkBK,QALd,WACrBD,EAAUD,IAIV,SACE,qBAAKG,IAAKL,EAAKC,IAAKA,EAAKhB,UAAWC,IAAEoB,2B,iBCsB7BC,EA5BM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQL,EAAgB,EAAhBA,UAC9B,OACE,oBAAIlB,UAAWC,IAAEqB,aAAjB,SACGC,EAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,cAA3B,OACV,cAAC,EAAD,CAEEb,IAAKW,EACLV,IAAKW,EACLV,WAAYW,EACZV,UAAWA,GAJNO,S,iBCIAI,EAVA,SAAC,GAAiB,IAAfV,EAAc,EAAdA,QAChB,OACE,wBAAQnB,UAAWC,IAAE4B,OAAQxB,KAAK,SAASc,QAASA,EAApD,wB,kECaWW,E,4JAbb,WACE,OACE,cAAC,IAAD,CACE9B,UAAWC,IAAE6B,OACbzB,KAAK,YACL0B,MAAM,UACNC,OAAQ,IACRC,MAAO,U,GARMC,a,iBCAN,SAASC,EAAT,GAA4C,IAA3BlB,EAA0B,EAA1BA,WAAYmB,EAAc,EAAdA,WAC1CC,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWC,GAE5B,WACLF,OAAOG,oBAAoB,UAAWD,MAGvC,IAEH,IAAMA,EAAgB,SAAAtC,GACL,WAAXA,EAAEwC,MACJN,KAUJ,OACE,qBAAKpC,UAAWC,IAAE0C,QAASxB,QAPD,SAAAjB,GACtBA,EAAEQ,gBAAkBR,EAAE0C,QACxBR,KAKF,SACE,qBAAKpC,UAAWC,IAAEkC,MAAlB,SACE,qBAAKf,IAAKH,EAAYD,IAAI,SCpBnB,SAAS6B,IACtB,MAA4BhD,mBAAS,IAArC,mBAAO0B,EAAP,KAAeuB,EAAf,KACA,EAAsCjD,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBgE,EAApB,KACA,EAAsClD,mBAAS,IAA/C,mBAAOf,EAAP,KAAoBkE,EAApB,KACA,EAAoCnD,mBAAS,IAA7C,mBAAOoB,EAAP,KAAmBgC,EAAnB,KACA,EAAkCpD,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAAkCtD,oBAAS,GAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEAhB,qBAAU,WACHvD,GAILwE,MACC,CAACxE,IAEJ,IASMwE,EAAgB,WACpB,IAAMC,EAAU,CAAEzE,cAAaC,eAE/BoE,GAAa,GAGbK,YAAW,WACT3E,EAAW0E,GACRrE,MAAK,SAAAqC,GACJuB,GAAU,SAAAW,GAAI,4BAAQA,GAAR,YAAiBlC,OAC/BwB,GAAe,SAAAU,GAAI,OAAIA,EAAO,QAE/BvE,KAAKwE,GACLC,QAAQR,GAAa,MACvB,MAGCO,EAAe,WACf3E,EAAc,GAChBuD,OAAOsB,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,YAehB,OACE,qCACE,cAACtE,EAAD,CAAWC,SA/CO,SAAAE,GAChBhB,IAAgBgB,IAGpBkD,EAAelD,GACfgD,EAAU,IACVC,EAAe,OA0Cb,cAAC,EAAD,CAAcxB,OAAQA,EAAQL,UAbhB,SAAAD,GAChBoC,GAAa,GACbJ,EAAchC,MAYXmC,GAAa,cAACjB,EAAD,CAAOC,WATN,WACjBiB,GAAa,GACbJ,EAAc,KAOiChC,WAAYA,IACxDiC,GAAa,cAAC,EAAD,IACb3B,EAAO2C,OAAS,GAAK,cAAC,EAAD,CAAQ/C,QAASmC,O,YCtE7Ca,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxB,EAAD,MAEFiB,SAASQ,eAAe,U,kBCT1B3F,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,mD","file":"static/js/main.726685b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__Lz58_\",\"Modal\":\"Modal_Modal__2Lg9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__C2B6H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2OHVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1dvBz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1DOLa\",\"SearchForm\":\"Searchbar_SearchForm__2BiIq\",\"SearchFormButton\":\"Searchbar_SearchFormButton__12zuR\",\"SearchFormButton-label\":\"Searchbar_SearchFormButton-label__3hIbd\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2PC5B\"};","import PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nconst KEY = '21819092-c619300407dec0bd926653a16';\r\n\r\nconst ApiService = ({ searchQuery, currentPage }) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12\r\n`,\r\n    )\r\n    .then(resp => resp.data.hits);\r\n};\r\n\r\nApiService.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ApiService;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n        <button type=\"submit\" className={s.SearchFormButton}></button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={handleChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ url, alt, largeImage, modalOpen }) => {\r\n  const sendLargeImage = () => {\r\n    modalOpen(largeImage);\r\n  };\r\n\r\n  return (\r\n    <li className={s.ImageGalleryItem} onClick={sendLargeImage}>\r\n      <img src={url} alt={alt} className={s.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  modalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ images, modalOpen }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          url={webformatURL}\r\n          alt={tags}\r\n          largeImage={largeImageURL}\r\n          modalOpen={modalOpen}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  modalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = { onClick: PropTypes.func.isRequired };\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport Spinner from 'react-loader-spinner';\r\n\r\nimport s from './Loader.module.css';\r\nclass Loader extends Component {\r\n  render() {\r\n    return (\r\n      <Spinner\r\n        className={s.Loader}\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={100}\r\n        width={200}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nexport default function Modal({ largeImage, modalClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      modalClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      modalClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImage} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  modalClose: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\n\nimport ApiService from 'components/ApiService';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Button from 'components/Button';\nimport Loader from 'components/Loader';\nimport Modal from 'components/Modal';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [largeImage, setLargeImage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetchPictures();\n  }, [searchQuery]);\n\n  const onChangeQuery = query => {\n    if (searchQuery === query) {\n      return;\n    }\n    setSearchQuery(query);\n    setImages([]);\n    setCurrentPage(1);\n  };\n\n  const fetchPictures = () => {\n    const options = { searchQuery, currentPage };\n\n    setIsLoading(true);\n\n    // setTimeout для лоадера\n    setTimeout(() => {\n      ApiService(options)\n        .then(images => {\n          setImages(prev => [...prev, ...images]);\n          setCurrentPage(prev => prev + 1);\n        })\n        .then(smoothScroll)\n        .finally(setIsLoading(false));\n    }, 500);\n  };\n\n  const smoothScroll = () => {\n    if (currentPage > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  const modalOpen = largeImage => {\n    setShowModal(true);\n    setLargeImage(largeImage);\n  };\n\n  const modalClose = () => {\n    setShowModal(false);\n    setLargeImage('');\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={onChangeQuery} />\n      <ImageGallery images={images} modalOpen={modalOpen} />\n      {showModal && <Modal modalClose={modalClose} largeImage={largeImage} />}\n      {isLoading && <Loader />}\n      {images.length > 0 && <Button onClick={fetchPictures} />}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1rvTr\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3rkF5\"};"],"sourceRoot":""}